package web;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;

import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

//파일 업로드 가능
@MultipartConfig(
        fileSizeThreshold = 1024 * 1024 * 1,
        maxFileSize = 1024 * 1024 * 10,
        maxRequestSize = 1024 * 1024 * 100
)

public class writeok extends HttpServlet {
    private static final long serialVersionUID = 1L;
    dbconfig db = null;
    PreparedStatement ps = null;

    public writeok() {
        super();
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        request.setCharacterEncoding("utf-8");
        response.setContentType("text/html; charset=utf-8");

        //System.out.println(file.getName());    //name값명
        //System.out.println(file.getSize());    //파일 사이즈
        //System.out.println(file.getContentType());    //파일에 대한 속성
        //System.out.println(file.getHeader(getServletName()));    //파일명
        //String filenm = file.getSubmittedFileName().intern();
        
        String mtitle = request.getParameter("utitle").intern();
        String mname = request.getParameter("uname").intern();
        String mpass = request.getParameter("upass").intern();
        
        Part file = request.getPart("mfile");
        
        
        if(filesize == 0) {
        	//첨부파일이 없을 때의 SQL
            //filename = null;
        	//첨부파일 용량
        	int filesize = (int)file.getSize();
        	//첨부파일 저장공간
        	String savepath = request.getServletContext().getRealPath("/board/upload/");
        	//업로드 시 사용하는 파일명
        	String filename = file.getSubmittedFileName();
        	//실제 저장되는 형태
        	String uploadfile = savepath + filename;
        	//[Stream으로 첨부파일 처리]
        	InputStream is = file.getInputStream();	//스트림으로 변환
        	FileOutputStream fs = new FileOutputStream(uploadfile);
        }
        else {
        	//첨부파일이 있을 때의 SQL
            byte[] buf = new byte[is.available()];
            int size = 0;
            while((size = is.read(buf)) != -1) {
            	fs.write(buf, 0, size);
            	fs.flush();
            }
            fs.close();
            is.close();
        }
        
        String mcnt = request.getParameter("texts").intern();

        PrintWriter pw = response.getWriter(); //스크립트 출력
        if(mtitle == "" || mname == "" || mpass == "" || filename == "" || mcnt == "") {
            pw.write("<script>"
                    + "alert('올바른 정보가 전달되지 않으셨습니다.');"
                    + "history.go(-1);"
                    + "</script>");
        }
        else {
            try {
                this.db = new dbconfig();
                Connection con = this.db.dbinfo();
                //람다식 형태의 코드로 작성
                String sql = "insert into board values ("
                        + "'0', ?, ?, ?, ?, ?, now(), '0')";
                this.ps = con.prepareStatement(sql);
                this.ps.setString(1, mtitle);
                this.ps.setString(2, mname);
                this.ps.setString(3, mpass);
                this.ps.setString(4, filenm);
                this.ps.setString(5, mcnt);

                int call = this.ps.executeUpdate();
                String msg = "";
                if(call > 0) {
                    msg = "정상적으로 글쓰기가 완료되었습니다.";
                    this.ps.close();
                    con.close();

                }
                else {
                    msg = "글쓰기가 원활하게 진행되지 않았습니다.";
                }
                pw.write("<script>"
                    + "alert('"+msg+"');"
                    + "location.href='./list.html';"
                    + "</script>");
            }
            catch(Exception e) {
                System.out.println("Database 정보 오류!!");
            }
        }
        
        
    }
}